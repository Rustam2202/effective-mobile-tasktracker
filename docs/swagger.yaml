definitions:
  actions.createUserRequest:
    properties:
      passportNumber:
        type: string
    type: object
  actions.updateUserRequest:
    properties:
      address:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      passport_number:
        type: integer
      passport_serie:
        type: integer
      patronymic:
        type: string
      surname:
        type: string
      updated_at:
        type: string
    type: object
  actions.userRequest:
    properties:
      task_id:
        type: integer
      user_id:
        type: integer
    type: object
  models.TaskBind:
    properties:
      created_at:
        type: string
      finish_at:
        type: string
      id:
        type: integer
      start_at:
        type: string
      task_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      address:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      passport_number:
        type: integer
      passport_serie:
        type: integer
      patronymic:
        type: string
      surname:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /task:
    get:
      consumes:
      - application/json
      description: Get total time spent by a user on tasks within a period
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Begin period
        example: '"2023-30-12 00:00:00"'
        in: query
        name: begin_period
        required: true
        type: string
      - description: End period
        example: '"2023-31-12 23:59:59"'
        in: query
        name: end_period
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              properties:
                task_id:
                  type: integer
                time_sum:
                  type: number
              type: object
            type: array
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get total time spent by a user on tasks within a period
      tags:
      - Tasks
  /task/start:
    post:
      consumes:
      - application/json
      description: Start a task for a user
      parameters:
      - description: User and Task IDs
        in: body
        name: userReq
        required: true
        schema:
          $ref: '#/definitions/actions.userRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TaskBind'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: User or Task not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Start a task for a user
      tags:
      - Tasks
  /task/stop:
    post:
      consumes:
      - application/json
      description: Stop a task for a user
      parameters:
      - description: User and Task IDs
        in: body
        name: userReq
        required: true
        schema:
          $ref: '#/definitions/actions.userRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TaskBind'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: User or Task not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Stop a task for a user
      tags:
      - Tasks
  /user:
    get:
      consumes:
      - application/json
      description: Get a list of all users with optional filters for pagination and
        search
      parameters:
      - description: User ID
        in: query
        name: id
        type: integer
      - description: User name
        in: query
        name: name
        type: string
      - description: User surname
        in: query
        name: surname
        type: string
      - description: User patronymic
        in: query
        name: patronymic
        type: string
      - description: User passport serie
        in: query
        name: passportSerie
        type: integer
      - description: User passport number
        in: query
        name: passportNumber
        type: integer
      - description: User address
        in: query
        name: address
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        required: true
        type: integer
      - default: 10
        description: Number of users per page
        in: query
        name: perPage
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: Users not found
          schema:
            type: string
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User request body
        in: body
        name: userReq
        required: true
        schema:
          $ref: '#/definitions/actions.createUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User created
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update an existing user with the provided information
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: User request body
        in: body
        name: userReq
        required: true
        schema:
          $ref: '#/definitions/actions.updateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a user
      tags:
      - Users
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing user by ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted
          schema:
            type: string
        "400":
          description: Invalid id
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
      summary: Delete a user
      tags:
      - Users
swagger: "2.0"
